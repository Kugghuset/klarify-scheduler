.modal-content
    .modal-header
        h3.title Register
    .modal-body.editable-input
        form(name = 'regForm', ng-submit="register()" novalidate = 'novalidate')
            .row
                .col-md-12
                    .form-group(data-ng-class = "{'has-error': regForm.fName.$dirty && regForm.fName.$invalid }")

                        input.form-control(type = 'text', name = 'fName', data-ng-model = 'user.firstName', placeholder = 'First Name...', required = 'required', autocomplete = 'off')
                        div(data-ng-show = 'regForm.fName.$dirty && regForm.fName.$invalid')
                            span.help-block(data-ng-show = '!regForm.fName.hasFocus && regForm.fName.$error.required') Required
                    .form-group(data-ng-class = "{'has-error': regForm.lName.$dirty && regForm.lName.$invalid }")

                        input.form-control(type = 'text', name = 'lName', data-ng-model = 'user.lastName', placeholder = 'Last Name...', required = 'required', autocomplete = 'off')
                        div(data-ng-show = 'regForm.lName.$dirty && regForm.lName.$invalid')
                            span.help-block(data-ng-show = '!regForm.lName.hasFocus && regForm.lName.$error.required') Required
                    .form-group(data-ng-class = "{'has-error': regForm.email.$dirty && regForm.email.$invalid }")

                        input.form-control(type = 'email', name = 'email', ng-pattern = 'emailPattern', data-ng-model = 'user.email', placeholder = 'Email Address...', required = 'required', autocomplete = 'off')
                        div(data-ng-show = 'regForm.email.$dirty && regForm.email.$invalid || regForm.email.$error.pattern')
                            span.help-block(data-ng-show = '!regForm.email.hasFocus && regForm.email.$error.required') Required
                            span.help-block(ng-show = '!regForm.email.hasFocus && regForm.email.$error.pattern') Please enter a valid email address.
                    .form-group(data-ng-class = "{'has-error': regForm.password.$dirty && regForm.password.$invalid}")

                        input.form-control(type = 'password', name = 'password', data-ng-model = 'user.password', placeholder = 'Password...', required = 'required', data-ng-minlength = '6', autocomplete = 'off')
                        div(data-ng-show = 'regForm.password.$dirty && regForm.password.$invalid')
                            span.help-block(data-ng-show = '!regForm.password.hasFocus && regForm.password.$error.required') Required
                            span.help-block(data-ng-show = '!regForm.password.hasFocus && regForm.password.$error.minlength') Your password must be at least 6 characters.
                    .form-group(data-ng-class = "{'has-error': regForm.passwordConfirm.$dirty && regForm.passwordConfirm.$invalid}")

                        input.form-control(type = 'password', name='passwordConfirm', data-ng-model='user.confirmPassword', placeholder='Confirm Password', required='required', data-ng-minlength='6', equal-to='password', autocomplete='off')
                        div(data-ng-show = 'regForm.passwordConfirm.$dirty && regForm.passwordConfirm.$invalid')
                            span.help-block(data-ng-show = '!regForm.passwordConfirm.hasFocus && regForm.passwordConfirm.$error.required') Required
                            span.help-block(data-ng-show = '!regForm.passwordConfirm.hasFocus && regForm.passwordConfirm.$error.equalto') The passwords entered do not match.

                    input.btn.btn-primary.pull-right.btn-mini.bg-primary(type="submit", value="Register", data-ng-disabled="regForm.$invalid")
